{"mappings":"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","sources":["script.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', async () => {\n    const questions = await getQuestions();\n    const answers = [];\n    let graphResults = {};\n    // const questions = [];\n    //todo: remove log\n    console.log(\"Questions:\", questions);\n\n    if (questions.length === 0 || questions[0]?.error) {\n        //TODO Add error message\n    } else {\n        addQuestions(questions);\n    }\n    const slides = document.querySelector('.slides');\n    const slidesCount = document.querySelectorAll('.slide').length - 1;\n    let currentIndex = 0;\n\n    const updateSlidePosition = () => {\n        slides.style.transform = `translateX(-${currentIndex * 100}%)`;\n    };\n\n    const handleButtonClick = async (answer) => {\n        currentIndex++;\n        updateSlidePosition();\n        if (currentIndex < slidesCount) {\n            answers.push(answer);\n        } else {\n            graphResults = postAnswers(answers);\n        }\n    };\n\n    document.querySelectorAll('.btn').forEach(button => {\n        button.addEventListener('click', function (event) {\n            const buttonValue = event.target.value;\n            handleButtonClick(buttonValue);\n        });\n    });\n});\n\nasync function getQuestions() {\n    const url = \"https://il7bkysao3dscz7bylpledumk40tbmof.lambda-url.us-east-1.on.aws/questions\";\n    try {\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                'Host': 'il7bkysao3dscz7bylpledumk40tbmof.lambda-url.us-east-1.on.aws',\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n\n        return await response.json(); // Parse JSON response\n\n    } catch (error) {\n        console.error('Error:', error);\n        return [\n            {\n                \"error\": \"Oops - Sorry! Something went wrong. Can I blame it on politics?\"\n            }\n        ];\n    }\n}\n\nasync function postAnswers(answers) {\n    const url = \"https://il7bkysao3dscz7bylpledumk40tbmof.lambda-url.us-east-1.on.aws/questions\";\n\n    fetch(url, {\n        method: 'POST',\n        headers: {\n            'Host': 'il7bkysao3dscz7bylpledumk40tbmof.lambda-url.us-east-1.on.aws',\n            'Accept': '*/*',\n            'Connection': 'keep-alive'\n        },\n        body: JSON.stringify(answers) // Convert the array to a JSON string\n    })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Network response was not ok ' + response.statusText);\n            }\n            return response.json(); // Parse the JSON response if needed\n        })\n        .then(data => {\n            console.log(\"DATA: \", data);\n            showResponse(data.message, data.imageUrl, data.voteResults);\n            return data.voteResults;\n        })\n        .catch(error => {\n            console.error('Error:', error);\n            showResponse(\"Oops - Sorry! Something went wrong. Can I blame it on politics?\");\n            return {};\n        });\n}\n\nfunction addQuestions(questions) {\n\n    questions.forEach((question) => {\n        // create container with class\n        const slideDiv = document.createElement('div');\n        slideDiv.classList.add('slide');\n        // create question\n        const slideQuestion = document.createElement('p');\n        slideQuestion.classList.add('question');\n        slideQuestion.appendChild(document.createTextNode(question.question));\n        slideDiv.appendChild(slideQuestion);\n        // create random answers; currently just 2, but maybe a loop here would be better to display all answers\n        let index = Math.floor(Math.random() * question.answers.length);\n        const answer1 = question.answers[index];\n        question.answers.splice(index, 1);\n        index = Math.floor(Math.random() * question.answers.length);\n        const answer2 = question.answers[index];\n        question.answers.splice(index, 1);\n        index = Math.floor(Math.random() * question.answers.length);\n        const answer3 = question.answers[index];\n        question.answers.splice(index, 1);\n        index = Math.floor(Math.random() * question.answers.length);\n        const answer4 = question.answers[index];\n        question.answers.splice(index, 1);\n\n        // create container for random answers\n        const answersDiv = document.createElement('div');\n        answersDiv.classList.add('buttons');\n        // answer 1\n        const button1 = document.createElement('button');\n        button1.classList.add('btn');\n        button1.textContent = answer1;\n        button1.value = answer1;\n        answersDiv.appendChild(button1);\n        // answer 2\n        const button2 = document.createElement('button');\n        button2.classList.add('btn');\n        button2.textContent = answer2;\n        button2.value = answer2;\n        answersDiv.appendChild(button2);\n        // answer 3\n        const button3 = document.createElement('button');\n        button3.classList.add('btn');\n        button3.textContent = answer3;\n        button3.value = answer3;\n        answersDiv.appendChild(button3);\n        // answer 4\n        const button4 = document.createElement('button');\n        button4.classList.add('btn');\n        button4.textContent = answer4;\n        button4.value = answer4;\n        answersDiv.appendChild(button4);\n\n        // answer 3? Add a wildcard button???\n        // package it all together and present\n        slideDiv.appendChild(answersDiv);\n        document.getElementById('slides-container').prepend(slideDiv);\n        const placeholder = document.getElementById(\"placeholder-slide\");\n        if (placeholder) {\n            placeholder.remove();\n        }\n    });\n}\n\nfunction showResponse(message = \"\", imageUrl = \"\", voteResults) {\n    const slogan = document.getElementById('slogan')\n    slogan.textContent = \"\";\n\n    // remove placeholder\n    const results = document.getElementById('results-placeholder')\n    console.log(\"PollResults: \", voteResults)\n    if (voteResults) {\n        const agree = document.getElementById('vote-results');\n        agree.classList.remove('hidden');\n    }\n\n    results.classList.remove('placeholder');\n\n    // set image\n    if (imageUrl) {\n        const image = document.getElementById(\"aiImage\");\n        image.src = imageUrl;\n        image.alt = message;\n    }\n    // set slogan\n    slogan.textContent = message;\n\n    results.scrollIntoView({behavior: 'smooth'});\n}"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}